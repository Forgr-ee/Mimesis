/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown
      }
    }
  }
  '/mimesis_lang': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_lang.id']
          created_at?: parameters['rowFilter.mimesis_lang.created_at']
          name?: parameters['rowFilter.mimesis_lang.name']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['mimesis_lang'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** mimesis_lang */
          mimesis_lang?: definitions['mimesis_lang']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_lang.id']
          created_at?: parameters['rowFilter.mimesis_lang.created_at']
          name?: parameters['rowFilter.mimesis_lang.name']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_lang.id']
          created_at?: parameters['rowFilter.mimesis_lang.created_at']
          name?: parameters['rowFilter.mimesis_lang.name']
        }
        body: {
          /** mimesis_lang */
          mimesis_lang?: definitions['mimesis_lang']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/mimesis_guesses': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_guesses.id']
          created_at?: parameters['rowFilter.mimesis_guesses.created_at']
          lang?: parameters['rowFilter.mimesis_guesses.lang']
          mode?: parameters['rowFilter.mimesis_guesses.mode']
          author?: parameters['rowFilter.mimesis_guesses.author']
          cover?: parameters['rowFilter.mimesis_guesses.cover']
          title?: parameters['rowFilter.mimesis_guesses.title']
          type?: parameters['rowFilter.mimesis_guesses.type']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['mimesis_guesses'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** mimesis_guesses */
          mimesis_guesses?: definitions['mimesis_guesses']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_guesses.id']
          created_at?: parameters['rowFilter.mimesis_guesses.created_at']
          lang?: parameters['rowFilter.mimesis_guesses.lang']
          mode?: parameters['rowFilter.mimesis_guesses.mode']
          author?: parameters['rowFilter.mimesis_guesses.author']
          cover?: parameters['rowFilter.mimesis_guesses.cover']
          title?: parameters['rowFilter.mimesis_guesses.title']
          type?: parameters['rowFilter.mimesis_guesses.type']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_guesses.id']
          created_at?: parameters['rowFilter.mimesis_guesses.created_at']
          lang?: parameters['rowFilter.mimesis_guesses.lang']
          mode?: parameters['rowFilter.mimesis_guesses.mode']
          author?: parameters['rowFilter.mimesis_guesses.author']
          cover?: parameters['rowFilter.mimesis_guesses.cover']
          title?: parameters['rowFilter.mimesis_guesses.title']
          type?: parameters['rowFilter.mimesis_guesses.type']
        }
        body: {
          /** mimesis_guesses */
          mimesis_guesses?: definitions['mimesis_guesses']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/mimesis_games': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_games.id']
          created_at?: parameters['rowFilter.mimesis_games.created_at']
          found_guess?: parameters['rowFilter.mimesis_games.found_guess']
          skip_guess?: parameters['rowFilter.mimesis_games.skip_guess']
          user_id?: parameters['rowFilter.mimesis_games.user_id']
          lang?: parameters['rowFilter.mimesis_games.lang']
          team?: parameters['rowFilter.mimesis_games.team']
          mode?: parameters['rowFilter.mimesis_games.mode']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['mimesis_games'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** mimesis_games */
          mimesis_games?: definitions['mimesis_games']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_games.id']
          created_at?: parameters['rowFilter.mimesis_games.created_at']
          found_guess?: parameters['rowFilter.mimesis_games.found_guess']
          skip_guess?: parameters['rowFilter.mimesis_games.skip_guess']
          user_id?: parameters['rowFilter.mimesis_games.user_id']
          lang?: parameters['rowFilter.mimesis_games.lang']
          team?: parameters['rowFilter.mimesis_games.team']
          mode?: parameters['rowFilter.mimesis_games.mode']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_games.id']
          created_at?: parameters['rowFilter.mimesis_games.created_at']
          found_guess?: parameters['rowFilter.mimesis_games.found_guess']
          skip_guess?: parameters['rowFilter.mimesis_games.skip_guess']
          user_id?: parameters['rowFilter.mimesis_games.user_id']
          lang?: parameters['rowFilter.mimesis_games.lang']
          team?: parameters['rowFilter.mimesis_games.team']
          mode?: parameters['rowFilter.mimesis_games.mode']
        }
        body: {
          /** mimesis_games */
          mimesis_games?: definitions['mimesis_games']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/mimesis_modes': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_modes.id']
          created_at?: parameters['rowFilter.mimesis_modes.created_at']
          id_ios?: parameters['rowFilter.mimesis_modes.id_ios']
          id_android?: parameters['rowFilter.mimesis_modes.id_android']
          active?: parameters['rowFilter.mimesis_modes.active']
          /** Ordering */
          order?: parameters['order']
          status?: parameters['rowFilter.mimesis_modes.status']
          name?: parameters['rowFilter.mimesis_modes.name']
          icon?: parameters['rowFilter.mimesis_modes.icon']
          /** Filtering Columns */
          select?: parameters['select']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['mimesis_modes'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** mimesis_modes */
          mimesis_modes?: definitions['mimesis_modes']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_modes.id']
          created_at?: parameters['rowFilter.mimesis_modes.created_at']
          id_ios?: parameters['rowFilter.mimesis_modes.id_ios']
          id_android?: parameters['rowFilter.mimesis_modes.id_android']
          active?: parameters['rowFilter.mimesis_modes.active']
          order?: parameters['rowFilter.mimesis_modes.order']
          status?: parameters['rowFilter.mimesis_modes.status']
          name?: parameters['rowFilter.mimesis_modes.name']
          icon?: parameters['rowFilter.mimesis_modes.icon']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.mimesis_modes.id']
          created_at?: parameters['rowFilter.mimesis_modes.created_at']
          id_ios?: parameters['rowFilter.mimesis_modes.id_ios']
          id_android?: parameters['rowFilter.mimesis_modes.id_android']
          active?: parameters['rowFilter.mimesis_modes.active']
          order?: parameters['rowFilter.mimesis_modes.order']
          status?: parameters['rowFilter.mimesis_modes.status']
          name?: parameters['rowFilter.mimesis_modes.name']
          icon?: parameters['rowFilter.mimesis_modes.icon']
        }
        body: {
          /** mimesis_modes */
          mimesis_modes?: definitions['mimesis_modes']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/mimesis_users': {
    get: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.mimesis_users.created_at']
          games?: parameters['rowFilter.mimesis_users.games']
          id?: parameters['rowFilter.mimesis_users.id']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['mimesis_users'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** mimesis_users */
          mimesis_users?: definitions['mimesis_users']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.mimesis_users.created_at']
          games?: parameters['rowFilter.mimesis_users.games']
          id?: parameters['rowFilter.mimesis_users.id']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.mimesis_users.created_at']
          games?: parameters['rowFilter.mimesis_users.games']
          id?: parameters['rowFilter.mimesis_users.id']
        }
        body: {
          /** mimesis_users */
          mimesis_users?: definitions['mimesis_users']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
}

export interface definitions {
  mimesis_lang: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string
    /** Format: text */
    name?: string
  }
  mimesis_guesses: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `mimesis_lang.id`.<fk table='mimesis_lang' column='id'/>
     */
    lang: number
    /** Format: bigint */
    mode?: number
    /** Format: text */
    author?: string
    /** Format: text */
    cover?: string
    /** Format: text */
    title: string
    /** Format: text */
    type?: string
  }
  mimesis_games: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string
    /** Format: ARRAY */
    found_guess: unknown[]
    /** Format: ARRAY */
    skip_guess: unknown[]
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `mimesis_users.id`.<fk table='mimesis_users' column='id'/>
     */
    user_id?: string
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `mimesis_lang.id`.<fk table='mimesis_lang' column='id'/>
     */
    lang: number
    /** Format: json */
    team: unknown
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `mimesis_modes.id`.<fk table='mimesis_modes' column='id'/>
     */
    mode?: number
  }
  mimesis_modes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string
    /** Format: text */
    id_ios?: string
    /** Format: text */
    id_android?: string
    /** Format: boolean */
    active: boolean
    /** Format: smallint */
    order: number
    /**
     * Format: public.mode_status
     * @enum {string}
     */
    status: 'paid' | 'free' | 'purchased'
    /** Format: text */
    name: string
    /** Format: text */
    icon?: string
  }
  mimesis_users: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string
    /** Format: bigint */
    games: number
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string
  }
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object'
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none'
  /** @description Filtering Columns */
  select: string
  /** @description On Conflict */
  on_conflict: string
  /** @description Ordering */
  order: string
  /** @description Limiting and Pagination */
  range: string
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string
  /** @description Limiting and Pagination */
  offset: string
  /** @description Limiting and Pagination */
  limit: string
  /** @description mimesis_lang */
  'body.mimesis_lang': definitions['mimesis_lang']
  /** Format: bigint */
  'rowFilter.mimesis_lang.id': string
  /** Format: timestamp with time zone */
  'rowFilter.mimesis_lang.created_at': string
  /** Format: text */
  'rowFilter.mimesis_lang.name': string
  /** @description mimesis_guesses */
  'body.mimesis_guesses': definitions['mimesis_guesses']
  /** Format: bigint */
  'rowFilter.mimesis_guesses.id': string
  /** Format: timestamp with time zone */
  'rowFilter.mimesis_guesses.created_at': string
  /** Format: bigint */
  'rowFilter.mimesis_guesses.lang': string
  /** Format: bigint */
  'rowFilter.mimesis_guesses.mode': string
  /** Format: text */
  'rowFilter.mimesis_guesses.author': string
  /** Format: text */
  'rowFilter.mimesis_guesses.cover': string
  /** Format: text */
  'rowFilter.mimesis_guesses.title': string
  /** Format: text */
  'rowFilter.mimesis_guesses.type': string
  /** @description mimesis_games */
  'body.mimesis_games': definitions['mimesis_games']
  /** Format: bigint */
  'rowFilter.mimesis_games.id': string
  /** Format: timestamp with time zone */
  'rowFilter.mimesis_games.created_at': string
  /** Format: ARRAY */
  'rowFilter.mimesis_games.found_guess': string
  /** Format: ARRAY */
  'rowFilter.mimesis_games.skip_guess': string
  /** Format: text */
  'rowFilter.mimesis_games.user_id': string
  /** Format: bigint */
  'rowFilter.mimesis_games.lang': string
  /** Format: json */
  'rowFilter.mimesis_games.team': string
  /** Format: bigint */
  'rowFilter.mimesis_games.mode': string
  /** @description mimesis_modes */
  'body.mimesis_modes': definitions['mimesis_modes']
  /** Format: bigint */
  'rowFilter.mimesis_modes.id': string
  /** Format: timestamp with time zone */
  'rowFilter.mimesis_modes.created_at': string
  /** Format: text */
  'rowFilter.mimesis_modes.id_ios': string
  /** Format: text */
  'rowFilter.mimesis_modes.id_android': string
  /** Format: boolean */
  'rowFilter.mimesis_modes.active': string
  /** Format: smallint */
  'rowFilter.mimesis_modes.order': string
  /** Format: public.mode_status */
  'rowFilter.mimesis_modes.status': string
  /** Format: text */
  'rowFilter.mimesis_modes.name': string
  /** Format: text */
  'rowFilter.mimesis_modes.icon': string
  /** @description mimesis_users */
  'body.mimesis_users': definitions['mimesis_users']
  /** Format: timestamp with time zone */
  'rowFilter.mimesis_users.created_at': string
  /** Format: bigint */
  'rowFilter.mimesis_users.games': string
  /** Format: text */
  'rowFilter.mimesis_users.id': string
}

export interface operations {}

export interface external {}
