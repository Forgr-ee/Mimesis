name: Build source code and send to Capgo

on:
  push:
    tags:
      - '*'
      
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: "Build code and release"
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.22.2
      - name: Install dependencies
        id: install_code
        run: pnpm i        
      - name: Lint
        id: lint_code
        run: pnpm lint:markup && pnpm lint:script
      - name: Test
        id: test_code
        run: pnpm test:run
      - name: Build
        id: build_code
        run: pnpm run build
      - name: Create Release Alpha
        if: "contains(github.ref, '-alpha.')"
        id: create_release_prepro
        run: npx @capgo/cli@latest upload -a ${{ secrets.CAPGO_TOKEN }} -c alpha
      - name: Create Release Production
        if: "!contains(github.ref, '-alpha.')"
        id: create_release_prod
        run: npx @capgo/cli@latest upload -a ${{ secrets.CAPGO_TOKEN }} -c production
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Install dependencies
        id: install_code
        run: pnpm install --frozen-lockfile
      - name: Build
        id: build_code
        run: pnpm build
      - name: Sync
        id: sync_code
        run: npx cap sync
      - name: Setup java
        uses: actions/setup-java@v3
        with:
            distribution: 'zulu'
            java-version: '11'
      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          fileName: "android_keystore.keystore"
          encodedString: ${{ secrets.ANDROID_KEYSTORE_FILE }}
      - name: Decode Google Play Confi File
        uses: timheuer/base64-to-file@v1
        id: service_account_json_file
        with:
          fileName: "serviceAccount.json"
          encodedString: ${{ secrets.PLAY_CONFIG_JSON }}
      - uses: maierj/fastlane-action@v2.3.0
        env:
          KEYSTORE_PATH: ${{ steps.android_keystore.outputs.filePath }}
          ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
          DEVELOPER_PACKAGE_NAME: ${{ secrets.DEVELOPER_PACKAGE_NAME }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        with:
          lane: android beta
      - name: Upload release bundle
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: ./android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 60
  build_ios:
      runs-on: macOS-latest
      steps:
        - uses: actions/checkout@v3
        - uses: pnpm/action-setup@v2
          with:
            version: 7
        - name: Use Node.js 16
          uses: actions/setup-node@v3
          with:
            node-version: 16
            cache: 'pnpm'
        - name: Install dependencies
          id: install_code
          run: pnpm install --frozen-lockfile
        - name: Build
          id: build_code
          run: pnpm build
        - name: Sync
          id: sync_code
          run: npx cap sync
        - uses: ruby/setup-ruby@v1
          with:
            ruby-version: '2.7.2'
        - uses: maierj/fastlane-action@v2.3.0
          env:
            DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
            DEVELOPER_APP_ID: ${{ secrets.DEVELOPER_APP_ID }}
            PROVISIONING_PROFILE_SPECIFIER: match AppStore ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
            TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
            TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
            APPLE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
            APPLE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
            APPLE_KEY_CONTENT: ${{ secrets.APPSTORE_PRIVATE_KEY }}
            CERTIFICATE_STORE_URL: https://github.com/${{ secrets.CERTIFICATE_STORE_REPO }}.git
            GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
            GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            FASTLANE_APPLE_ID: ${{ secrets.FASTLANE_APPLE_ID }}
            MATCH_USERNAME: ${{ secrets.FASTLANE_APPLE_ID }}
            MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
            APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
            DEVELOPER_PORTAL_TEAM_ID: ${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}
          with:
            lane: closed_beta
        - name: Upload release bundle
          uses: actions/upload-artifact@v2
          with:
            name: ios-release
            path: ./App.ipa
            retention-days: 60